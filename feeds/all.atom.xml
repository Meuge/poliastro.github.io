<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>poliastro</title><link href="https://blog.poliastro.space/" rel="alternate"></link><link href="https://blog.poliastro.space/feeds/all.atom.xml" rel="self"></link><id>https://blog.poliastro.space/</id><updated>2019-08-20T22:00:00+02:00</updated><subtitle>poliastro website</subtitle><entry><title>New features after GSOC19</title><link href="https://blog.poliastro.space/2019/08/20/2019-08-20-new-features-after-gsoc19/" rel="alternate"></link><published>2019-08-20T22:00:00+02:00</published><updated>2019-08-20T22:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-08-20:2019/08/20/2019-08-20-new-features-after-gsoc19/</id><summary type="html">&lt;p&gt;GSOC 2019 Edition has almost finished. All along this last three months lots of
issues where solved, &lt;code&gt;poliastro 0.13&lt;/code&gt; was raised, new features were applied and
of course, new issues and bugs appeared.&lt;/p&gt;
&lt;p&gt;The objective of this post is just to collect all the implementations that have
been merged during this GSOC and also those that are still required to be done.&lt;/p&gt;
&lt;h2&gt;ALREADY IMPLEMENTED&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Lambert minor issues were fixed.&lt;/li&gt;
&lt;li&gt;[x] Lambert as Maneuver instances.&lt;/li&gt;
&lt;li&gt;[x] Docs and notebook on previous implementations.&lt;/li&gt;
&lt;li&gt;[x] Trail plotting option.&lt;/li&gt;
&lt;li&gt;[x] Fix minor issues on CI and tests.&lt;/li&gt;
&lt;li&gt;[x] New twobody propagators.&lt;/li&gt;
&lt;li&gt;[x] Maneuver fixes: Hohmann time to pericenter and units bug.&lt;/li&gt;
&lt;li&gt;[x] Atmospheric models: COESA62 and COESA76.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A detailed description and link to the code can be found in the following lines.&lt;/p&gt;
&lt;h3&gt;Izzo Algorithm minor errors&lt;/h3&gt;
&lt;p&gt;Some errors appeared in the minimum …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>CZML Extractor: An overview</title><link href="https://blog.poliastro.space/2019/08/19/2019-08-19-czml-extractor-an-overview.md/" rel="alternate"></link><published>2019-08-19T15:00:00+02:00</published><updated>2019-08-19T15:00:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-08-19:2019/08/19/2019-08-19-czml-extractor-an-overview.md/</id><summary type="html">&lt;p&gt;As the proverb says "all good things must come to an end". Unfortunately, it's time
to bid adieu to the summer and have a look on what has been accomplished so far.&lt;/p&gt;
&lt;h2&gt;The CZML Extractor&lt;/h2&gt;
&lt;p&gt;This was undoubtedly the main and most time-consuming part of the project. The extractor
allows users to easily convert orbital data to CZML. You can find an overview of the
extractor's usage in the &lt;a href="https://docs.poliastro.space/en/stable/user_guide.html"&gt;User Guide&lt;/a&gt;
or take a look in the more in-depth 
&lt;a href="https://github.com/Sedictious/poliastro/blob/2c4355e50207470b18f31d8405ddc1f2c53c574b/docs/source/examples/CZML%20Tutorial.ipynb"&gt;Jupyter notebook tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;The Cesium Application&lt;/h2&gt;
&lt;p&gt;Since we need more parameters to accurately represent the data, we also need a
specific application to parse said parameters. For this reason, I worked on a 
Cesium application that allows you to easily visualize the data. At this moment, 
there are two separate applications: 
&lt;a href="https://github.com/poliastro/cesium-app/tree/master/application"&gt;one&lt;/a&gt; that runs remotely 
and &lt;a href="https://github.com/poliastro/cesium-app/tree/master/Sandcastle"&gt;one&lt;/a&gt; you can
copy-paste directly …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Hard reformat week</title><link href="https://blog.poliastro.space/2019/08/18/2019-08-16-hard-reformat-week/" rel="alternate"></link><published>2019-08-18T17:30:00+02:00</published><updated>2019-08-18T17:30:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-08-18:2019/08/18/2019-08-16-hard-reformat-week/</id><summary type="html">&lt;h2&gt;Reformat on poliastro.atmosphere&lt;/h2&gt;
&lt;p&gt;After implementing the &lt;code&gt;COESA62&lt;/code&gt; and &lt;code&gt;COESA76&lt;/code&gt; models in
&lt;a href="https://github.com/poliastro/poliastro/pull/738"&gt;#738&lt;/a&gt; I was not completly
happy because of lots of data and coefficients at the beginning of each script.
Therefore and after asking Juanlu, it was finally decided to move all those
numbers to text files under the &lt;code&gt;*.dat&lt;/code&gt; extension.&lt;/p&gt;
&lt;p&gt;Furthermore, I decided not only to do that but also to completely reformat the
&lt;code&gt;poliastro.atmosphere&lt;/code&gt; module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;base.py&lt;/code&gt;: holds different mother classes for atmospheric models.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;coesa62.py&lt;/code&gt;: U.S Standard Atmosphere 1962 model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;coesa76.py&lt;/code&gt;: U.S Standard Atmosphere 1976 model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;util.py&lt;/code&gt;: contains atmospheric utilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Documentation was also added together with a notebook to better see not only how
these objects work but their differences in output results. In the following
image properties for COESA76 against geometrical altitude are plotted:&lt;/p&gt;
&lt;p&gt;&lt;img alt="COESA76" src="https://blog.poliastro.space/images/atm76.png"&gt;&lt;/p&gt;
&lt;h2&gt;Reformat on poliastro.bodies&lt;/h2&gt;
&lt;p&gt;While working …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category><category term="atmosphere"></category><category term="bodies"></category></entry><entry><title>Atmospheric models and more!</title><link href="https://blog.poliastro.space/2019/08/01/2019-08-01-atmospheric-models-and-more/" rel="alternate"></link><published>2019-08-01T21:00:00+02:00</published><updated>2019-08-01T21:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-08-01:2019/08/01/2019-08-01-atmospheric-models-and-more/</id><summary type="html">&lt;h2&gt;Tasks for this last period...&lt;/h2&gt;
&lt;p&gt;While checking the stability of the 0.13, GSOC continues and new bugs,
implementations, and others need to be solved for the 0.14. Most of them are
related to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New frame modeling, implementation, and testing.&lt;/li&gt;
&lt;li&gt;New plotting capabilities, such us two attractors in the same plot.&lt;/li&gt;
&lt;li&gt;New orbit creation methods.&lt;/li&gt;
&lt;li&gt;Start using non-dimensional units.&lt;/li&gt;
&lt;li&gt;Different bug solving.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issues related to frames are the most tricky ones since working with them is
not so intuitive. Plotting capabilities are directly related to frames and
therefore no major improvements are done in this field without solving something
in the previous one.&lt;/p&gt;
&lt;h2&gt;New atmospheric models&lt;/h2&gt;
&lt;p&gt;I have been trying to model and implement some famous atmospheric models for
poliastro. Drag is one of the main perturbations for LEO orbits. By making use
of Cowell's formulation we can integrate …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category><category term="twobody"></category></entry><entry><title>Ground track plotting and Ellipsoids</title><link href="https://blog.poliastro.space/2019/08/01/2019-08-01-ground-track-plotting-and-ellipsoids.md/" rel="alternate"></link><published>2019-08-01T15:00:00+02:00</published><updated>2019-08-01T15:00:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-08-01:2019/08/01/2019-08-01-ground-track-plotting-and-ellipsoids.md/</id><summary type="html">&lt;p&gt;The second evaluation period has come to the end and with the end of the
program drawing ever closer, I'm happy to announce that most work on 
the additional deliverables has been complete!&lt;/p&gt;
&lt;h2&gt;CZML3&lt;/h2&gt;
&lt;p&gt;I've added polylines and points (along with myriad of other dependent 
properties/types). These also marked the release of 
&lt;a href="https://pypi.org/project/czml3/#description"&gt;v0.1.3&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;Ground Track Plotting&lt;/h2&gt;
&lt;p&gt;Having added the necessary CZML properties, I finally managed to add
the ground track plotter. It allows to draw both a static path and
an animated one. The coolest feature is that it automatically calculates
the path's orthographic projection, allowing you to see the satellite in
2D mode. I was also toying with the idea of allowing the users to export
gif images directly from the application, which would mean no longer relying
on external screen capturing software to create and …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>New propagators</title><link href="https://blog.poliastro.space/2019/07/16/2019-07-16-new-propagators/" rel="alternate"></link><published>2019-07-16T09:00:00+02:00</published><updated>2019-07-16T09:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-07-16:2019/07/16/2019-07-16-new-propagators/</id><summary type="html">&lt;h2&gt;What are propagators and why do we care about them?&lt;/h2&gt;
&lt;p&gt;One of the most common problems in astrodynamics and orbital mechanics is that
we want to know where a body will be at a given position along its orbit for a
given time. It is possible to integrate by hard the two-body equation and then
apply some boundary conditions. However, this last option is just insane and
would take several hours or days to be done by a human.&lt;/p&gt;
&lt;p&gt;There is a better way to get the position as a function of time or &lt;code&gt;propagate&lt;/code&gt; an
orbit. Johannes Kepler's contributions to the astrodynamics and orbital
mechanics field were really important and can be summarized here, in the
so-called Kepler's Laws:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Planets' orbits follow an elliptical path around the Sun, which is located in one of the focus.&lt;/li&gt;
&lt;li&gt;Planets cover equal …&lt;/li&gt;&lt;/ul&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category><category term="kepler"></category></entry><entry><title>Moving forward with the Cesium application</title><link href="https://blog.poliastro.space/2019/07/15/2019-07-15-moving-forward-with-the-cesium-application/" rel="alternate"></link><published>2019-07-15T17:50:00+02:00</published><updated>2019-07-15T17:50:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-07-15:2019/07/15/2019-07-15-moving-forward-with-the-cesium-application/</id><summary type="html">&lt;p&gt;I feel like in the last couple of weeks I got to work a little in several aspects
of the project. While this didn't allow me to focus on a single feature, it allowed
me to make progress in various different areas.&lt;/p&gt;
&lt;h2&gt;Bug resolving and 2D mode&lt;/h2&gt;
&lt;p&gt;First and foremost, I got rid of a particularly frustrating bug in the application.
Certain javascript events (such as the one that allows the inertial view), where tied 
to a single &lt;code&gt;Viewer&lt;/code&gt; and thus wouldn't trigger when the &lt;code&gt;Viewer&lt;/code&gt; was destroyed 
(which is the case when, for example, loading the data from the file). I also made a 
few minor changes in the code and introduced the option to set the Viewer mode to 2D.
This isn't any useful as of now, but it will be with the new feature I'm planning to …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Converting to CZML and next steps</title><link href="https://blog.poliastro.space/2019/06/30/2019-06-30-converting-to-czml-and-next-steps/" rel="alternate"></link><published>2019-06-30T11:30:00+02:00</published><updated>2019-06-30T11:30:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-06-30:2019/06/30/2019-06-30-converting-to-czml-and-next-steps/</id><summary type="html">&lt;p&gt;So the first phase of GSoC is over and with it, it's time to reflect what
has been achieved in the last couple of months.&lt;/p&gt;
&lt;h1&gt;CZML3&lt;/h1&gt;
&lt;p&gt;As I mentioned in the 
&lt;a href="https://blog.poliastro.space/2019/06/13/2019-06-13-communication-satellites-and-refactoring/"&gt;last blogpost&lt;/a&gt;
this is a very useful &lt;a href="https://github.com/poliastro/czml3"&gt;library&lt;/a&gt; created by juanlu. After a
few patches, the library now supports most CZML properties and - as far as I can tell - this is 
the only currently mantained Python library for creating CZML packets.&lt;/p&gt;
&lt;h1&gt;CZML Extractor&lt;/h1&gt;
&lt;p&gt;This is the first feature I've started to work on and while it is still far from complete,
I'm happy to say that it is now usable. &lt;/p&gt;
&lt;p&gt;At first, the czml document was represented by a nested dictionary and then converted to 
valid JSON format. This worked ok and I did write a function which made manipulating the
dictionary a tad more intuitive, but it was …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Getting done for next release</title><link href="https://blog.poliastro.space/2019/06/29/2019-06-29-getting-done-for-next-release/" rel="alternate"></link><published>2019-06-29T07:00:00+02:00</published><updated>2019-06-29T07:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-06-29:2019/06/29/2019-06-29-getting-done-for-next-release/</id><summary type="html">&lt;h2&gt;Version 0.13 is getting closer&lt;/h2&gt;
&lt;p&gt;Version 0.13 is expected to be tagged in about a month. As any other release,
it includes new features such as a new method in the &lt;code&gt;Orbit&lt;/code&gt; class called
&lt;code&gt;change_attractor&lt;/code&gt; or the &lt;code&gt;trail&lt;/code&gt; parameter in &lt;code&gt;StaticOrbitPlotter&lt;/code&gt;. However,
this release will also include really important bug fixes such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Minor issues related to Lambert's problem.&lt;/li&gt;
&lt;li&gt;Propagator's are supposed not to hang out anymore due to robust solutions and propagation methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now that my final exams ended I am completely free to work in poliastro and
direct all my efforts to the software. I want to close issues
&lt;a href="https://github.com/poliastro/poliastro/issues/495"&gt;#495&lt;/a&gt; and
&lt;a href="https://github.com/poliastro/poliastro/issues/475"&gt;#475&lt;/a&gt;  in the next days since they are previously commented bugs.&lt;/p&gt;
&lt;h3&gt;Propagator methods in the twobody problem&lt;/h3&gt;
&lt;p&gt;Kepler's equation (KE) allows us to solve either for the time at a given
position or the position …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Communication satellites and refactoring</title><link href="https://blog.poliastro.space/2019/06/13/2019-06-13-communication-satellites-and-refactoring/" rel="alternate"></link><published>2019-06-13T21:00:00+02:00</published><updated>2019-06-13T21:00:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-06-13:2019/06/13/2019-06-13-communication-satellites-and-refactoring/</id><summary type="html">&lt;p&gt;Those couple of weeks were spent mainly on setting future milestones
and improving the quality of the code. In a way, Tom Cargill's famous
aphorism came to my mind:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first 90 percent of the code accounts for the first 90 percent 
of the development time. The remaining 10 percent of the code accounts
for the other 90 percent of the development time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Writing stuff that "just works" is relatively easy. But when programming,
you always have to keep track of myriad variables including but not limited
to: maintanability, integration and readability. &lt;/p&gt;
&lt;h1&gt;CZML3&lt;/h1&gt;
&lt;p&gt;My mentor, Juanlu, wrote a fully-fledged &lt;a href="https://github.com/poliastro/czml3"&gt;library&lt;/a&gt;
for composing czml packets. While it's still in the early stages of development,
I  would urge anyone interested to check it out. I'm currently trying to refactor
the czml core, so it utilizes the library instead of the current approach …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Lambert maneuvers and trails in plots</title><link href="https://blog.poliastro.space/2019/06/13/2019-06-13-Lambert-maneuvers-and-trails-in-plots/" rel="alternate"></link><published>2019-06-13T09:00:00+02:00</published><updated>2019-06-13T09:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-06-13:2019/06/13/2019-06-13-Lambert-maneuvers-and-trails-in-plots/</id><summary type="html">&lt;h2&gt;What's new?&lt;/h2&gt;
&lt;p&gt;Three weeks have passed since the coding phase began and new features have been
added to the software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lambert is now a &lt;code&gt;Maneuver&lt;/code&gt; instance.&lt;/li&gt;
&lt;li&gt;A trail keyword in &lt;code&gt;StaticOrbitPlotter&lt;/code&gt; for showing orbits' trails.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Lambert just needs now two orbits!&lt;/h3&gt;
&lt;p&gt;Although the raw algorithms are kept under the module &lt;code&gt;poliastro.iod&lt;/code&gt;, it is 
possible now to simplify the process of solving this famous astrodynamics 
problem by making use of the &lt;code&gt;poliastro.maneuver&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;Imagine that we want to solve the classical problem ongoing from Earth to Mars
for a trip of 600 days duration. Let us compare  before and after
&lt;code&gt;Maneuver.lambert&lt;/code&gt; implementations:&lt;/p&gt;
&lt;p&gt;With 0.12 version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;astropy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;units&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;astropy.time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Time&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;poliastro.bodies&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Earth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Sun&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;poliastro.iod.izzo&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;lambert&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;poliastro.twobody&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Orbit&lt;/span&gt;

&lt;span class="n"&gt;LAUNCH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Let the coding begin</title><link href="https://blog.poliastro.space/2019/05/29/2019-05-29-let-the-coding-begin/" rel="alternate"></link><published>2019-05-29T23:30:00+02:00</published><updated>2019-05-29T23:30:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-05-29:2019/05/29/2019-05-29-let-the-coding-begin/</id><summary type="html">&lt;h1&gt;Let the coding begin&lt;/h1&gt;
&lt;p&gt;So the bonding period is over, which means that the coding phase has officially begun.
I've already worked on some of the key features I'd like to add since my examination
period is around the corner. Hopefully, this won't slow me down and I'll keep up with 
the workload.&lt;/p&gt;
&lt;h1&gt;The work so far&lt;/h1&gt;
&lt;p&gt;I've worked on the main part of the project, which was to connect poliastro to the
visualization capabilities offered by the Cesium API. There is already the possibility
of adding orbits and defining custom attractors, along with various visual customizations.
As exciting as this is, there are still way more things that could be added to give life to the
project, rendering it more useful and interesting.&lt;/p&gt;
&lt;h1&gt;Communications satellites&lt;/h1&gt;
&lt;p&gt;In the past days, I became increasingly interested in adding communication satellites
and visualizing …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>Coding phase starts!</title><link href="https://blog.poliastro.space/2019/05/27/2019-05-27-coding-phase-starts/" rel="alternate"></link><published>2019-05-27T11:30:00+02:00</published><updated>2019-05-27T11:30:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-05-27:2019/05/27/2019-05-27-coding-phase-starts/</id><summary type="html">&lt;h2&gt;The End of the bonding period&lt;/h2&gt;
&lt;p&gt;Today bonding period ends for all students selected at GSoC'19. The aim of this
period was to learn more about your project community: get in touch with
mentors, other developers and their future ideas on the software...&lt;/p&gt;
&lt;p&gt;As I said in my last post, I started contributing to poliastro several months
ago, even before GSOC was announced. Therefore, and since I am taking my final
exams, all my efforts were towards passing them.&lt;/p&gt;
&lt;p&gt;But today the coding phase starts! That means we all should start working on
our proposal features.&lt;/p&gt;
&lt;h2&gt;The coding phase at poliastro&lt;/h2&gt;
&lt;p&gt;The release of poliastro version 0.13 is getting closer. During this first part
of the coding phase, I am planning to solve for different issues, most of them
related to frames, &lt;a href="https://github.com/poliastro/poliastro/milestone/14"&gt;check out milestones 0.13&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Frames are …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>The beginning of GSoC</title><link href="https://blog.poliastro.space/2019/05/13/2019-05-10-poliastro-gsoc-eleftheria/" rel="alternate"></link><published>2019-05-13T20:30:00+02:00</published><updated>2019-05-13T20:30:00+02:00</updated><author><name>Eleftheria Chatziargyriou</name></author><id>tag:blog.poliastro.space,2019-05-13:2019/05/13/2019-05-10-poliastro-gsoc-eleftheria/</id><summary type="html">&lt;p&gt;Hello everyone, I'm Eleftheria and this summer I'll be working with poliastro 
under Open Astronomy as part of GSoC 2019. I'm hoping this blog will prove to 
be interesting to those who are interested in poliastro or simply a source of 
inspiration to those looking for a way to get their feet wet with open source.&lt;/p&gt;
&lt;h1&gt;The beginning of a journey&lt;/h1&gt;
&lt;p&gt;After forking poliastro, I immediately dived in and tried to make sense of the
codebase. Fortunately, poliastro is extensively 
&lt;a href="https://docs.poliastro.space/en/stable/"&gt;documented&lt;/a&gt; so the learning curve wasn't
as steep as I expected. After getting familiar with the project structure, I started
browsing the open issues to find ways to make myself useful. What caught my attention
was the ongoing process of adding visualization features to poliastro, which would 
make the library more accessible to professionals and beginners alike.&lt;/p&gt;
&lt;p&gt;It should be …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>GSOC-19 starts!</title><link href="https://blog.poliastro.space/2019/05/10/2019-05-10-poliastro-gsoc-jorge/" rel="alternate"></link><published>2019-05-10T11:00:00+02:00</published><updated>2019-05-10T11:00:00+02:00</updated><author><name>Jorge Martínez Garrido</name></author><id>tag:blog.poliastro.space,2019-05-10:2019/05/10/2019-05-10-poliastro-gsoc-jorge/</id><summary type="html">&lt;h2&gt;From my first pull request to GSOC student&lt;/h2&gt;
&lt;p&gt;Hi, my name is Jorge, and I am one of the selected students for this GSOC
edition at poliastro under the OpenAstronomy organization. I started working on
poliastro project after Juanlu came to my university to give a talk about Open
Source software in engineering. &lt;/p&gt;
&lt;p&gt;After forking poliastro, I decided to improve API Docs, which gave me an
overview on how the project was built and how the different modules talked
among them. I had no idea on how Git and GitHub worked and therefore,
when finished with the docs my first pull request was quite massive...&lt;/p&gt;
&lt;p&gt;But after that I started feeling more confortable with GitHub and Sphinx, the
tool used nowadays in poliastro for building documentation. Then, I decided to
work on a porkchop plotter.&lt;/p&gt;
&lt;p&gt;I spent the week after …&lt;/p&gt;</summary><category term="GSOC"></category><category term="GSOC19"></category><category term="poliastro"></category></entry><entry><title>poliastro in Google Summer of Code 2019!</title><link href="https://blog.poliastro.space/2019/03/01/2019-03-01-poliastro-google-summer-of-code-2019/" rel="alternate"></link><published>2019-03-01T12:00:00+01:00</published><updated>2019-03-01T12:00:00+01:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:blog.poliastro.space,2019-03-01:2019/03/01/2019-03-01-poliastro-google-summer-of-code-2019/</id><summary type="html">&lt;p&gt;We are glad to announce that &lt;strong&gt;poliastro&lt;/strong&gt; will accept student applications during Google Summer of Code 2019, thanks to the umbrella organization OpenAstronomy! 🚀&lt;/p&gt;
&lt;p&gt;For the newcomers, poliastro is a pure Python library that allows you to easily simulate and visualize interplanetary orbits in an interactive way, &lt;a href="https://docs.poliastro.space/en/v0.12.0/index.html#success-stories"&gt;used by people from all around the world&lt;/a&gt;. Sounds interesting? Read on!&lt;/p&gt;
&lt;h1&gt;What is Google Summer of Code?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Google Summer of Code&lt;/strong&gt; (from now on, &lt;strong&gt;GSOC&lt;/strong&gt;) is, according to &lt;a href="https://summerofcode.withgoogle.com/"&gt;its own website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Google Summer of Code" src="https://upload.wikimedia.org/wikipedia/commons/1/1e/GSoC.png"&gt;&lt;/p&gt;
&lt;p&gt;GSOC is the inspiration for the Summer of Code in Space (SOCIS), a similar program organized by the European Space Agency in which &lt;a href="http://blog.poliastro.space/2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/"&gt;we also participated&lt;/a&gt;, with great success.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><category term="GSOC"></category><category term="Google"></category><category term="poliastro"></category><category term="students"></category></entry><entry><title>GSoC'18: improving propagators, adding natural and artificial perturbations at Poliastro</title><link href="https://blog.poliastro.space/2018/08/05/2018-08-05-google-summer-of-code-2018/" rel="alternate"></link><published>2018-08-05T14:00:00+02:00</published><updated>2018-08-05T14:00:00+02:00</updated><author><name>Nikita Astrakhantsev</name></author><id>tag:blog.poliastro.space,2018-08-05:2018/08/05/2018-08-05-google-summer-of-code-2018/</id><summary type="html">&lt;p&gt;It was a lazy Sunday at home and nothing prepared me for my girlfriend giving me the link for the GSoC'18 announcement page. I was considering participation a year ago, but had not enough resoluteness for that. This year I wanted it to be different so I started scrolling through the list of open-source organisations. As I am doing a PhD in theoretical physics now (defending in January 2019), I wanted the project to be scientific, not just some boring back-end development (in which I am anyway not strong enough). After a couple of iterations I converged to three space-aimed organisations. What shocked me, was the fact that mostly people of these organizations were not eager to even answer simple questions or it took them a week to provide a dataset for analysis. Only in Poliastro it was easy enough …&lt;/p&gt;</summary><category term="GSoC"></category><category term="poliastro"></category></entry><entry><title>poliastro at the Python in Astronomy 2018 conference</title><link href="https://blog.poliastro.space/2018/06/04/2018-06-04-poliastro-python-astronomy-2018-conference/" rel="alternate"></link><published>2018-06-04T20:30:00+02:00</published><updated>2018-06-04T20:30:00+02:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:blog.poliastro.space,2018-06-04:2018/06/04/2018-06-04-poliastro-python-astronomy-2018-conference/</id><summary type="html">&lt;p&gt;A month ago I had the privilege to attend the &lt;strong&gt;Python in Astronomy 2018 conference&lt;/strong&gt;, which gave me an unique perspective of the status of Python in the astronomical sciences and an opportunity to present poliastro to a very technical audience. I was planning to post a writeup somewhere, and as the Zen of Python says...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;import this&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Now&lt;/span&gt;
&lt;span class="n"&gt;Now&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;never&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, let's do it! 🚀&lt;/p&gt;
&lt;h1&gt;What was Python in Astronomy?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Python in Astronomy&lt;/strong&gt; (from now on, &lt;strong&gt;PyAstro18&lt;/strong&gt;) is best explained in &lt;a href="http://openastronomy.org/pyastro/2018/"&gt;its website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This conference aims to bring a wide variety of people who use, develop or teach people about Python packages in the context of all forms of Astronomy. The conference will include presentations, tutorials, unconference sessions, and sprints. As well as enhancing the community around astronomical uses of Python, the conference aims …&lt;/p&gt;&lt;/blockquote&gt;</summary><category term="pyastro18"></category><category term="poliastro"></category><category term="conferences"></category></entry><entry><title>Join poliastro thanks to Google Summer of Code!</title><link href="https://blog.poliastro.space/2018/02/22/2018-02-22-join-poliastro-google-summer-of-code/" rel="alternate"></link><published>2018-02-22T12:00:00+01:00</published><updated>2018-02-22T12:00:00+01:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:blog.poliastro.space,2018-02-22:2018/02/22/2018-02-22-join-poliastro-google-summer-of-code/</id><summary type="html">&lt;p&gt;We are glad to announce that &lt;strong&gt;poliastro&lt;/strong&gt; will accept student applications during Google Summer of Code this year, thanks to the umbrella organization OpenAstronomy! 🚀&lt;/p&gt;
&lt;p&gt;For the newcomers, poliastro is a pure Python library that allows you to easily simulate and visualize interplanetary orbits in an interactive way, &lt;a href="http://docs.poliastro.space/en/v0.8.0/index.html#success-stories"&gt;used by people from all around the world&lt;/a&gt;. Sounds interesting? Read on!&lt;/p&gt;
&lt;h1&gt;What is Google Summer of Code?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Google Summer of Code&lt;/strong&gt; (from now on, &lt;strong&gt;GSOC&lt;/strong&gt;) is, according to &lt;a href="https://summerofcode.withgoogle.com/"&gt;its own website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a global program focused on bringing more student developers into open source software development. Students work with an open source organization on a 3 month programming project during their break from school.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Google Summer of Code" src="https://upload.wikimedia.org/wikipedia/commons/1/1e/GSoC.png"&gt;&lt;/p&gt;
&lt;p&gt;GSOC is the inspiration for the Summer of Code in Space (SOCIS), a similar program organized by the European Space Agency in which &lt;a href="http://blog.poliastro.space/2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/"&gt;we also participated last year&lt;/a&gt;, with …&lt;/p&gt;</summary><category term="GSOC"></category><category term="Google"></category><category term="poliastro"></category><category term="students"></category></entry><entry><title>poliastro 0.7.0 released and ready for PyConES!</title><link href="https://blog.poliastro.space/2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/" rel="alternate"></link><published>2017-09-15T11:00:00+02:00</published><updated>2017-09-15T11:00:00+02:00</updated><author><name>Juan Luis Cano Rodríguez</name></author><id>tag:blog.poliastro.space,2017-09-15:2017/09/15/2017-09-15-poliastro-070-released-ready-pycones/</id><summary type="html">&lt;p&gt;It fills us with astronomical joy to announce the release of &lt;strong&gt;poliastro 0.7.0&lt;/strong&gt;! 🚀&lt;/p&gt;
&lt;p&gt;For the newcomers, poliastro is a pure Python library that allows you to simulate and analyze interplanetary orbits in a Jupyter notebook in an interactive and easy way, &lt;a href="http://docs.poliastro.space/en/v0.7.0/index.html#success-stories"&gt;used by people from all around the world&lt;/a&gt;. Sounds interesting? Read on!&lt;/p&gt;
&lt;p&gt;This release is the biggest one since the creation of the project in terms of code changes and new features, and on behalf of the poliastro development team I would like to deeply thank the European Space Agency for the SOCIS grant that made it possible. Besides, I would like to officially welcome Antonio Hidalgo to the team, since in reward for his amazing work during SOCIS he gained write access to the repository. ¡Bienvenido Antonio!&lt;/p&gt;
&lt;p&gt;As always, the easiest way to get poliastro in …&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="releases"></category><category term="PyConES"></category></entry><entry><title>FTPs, DASTCOM5 and dtypes (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017/08/17/2017-08-17-ftps-dastcom5-and-dtypes/" rel="alternate"></link><published>2017-08-17T22:00:00+02:00</published><updated>2017-08-17T22:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-08-17:2017/08/17/2017-08-17-ftps-dastcom5-and-dtypes/</id><summary type="html">&lt;p&gt;In the previous entry, I said that we had found a new database, and we would have to take a closer look to it.&lt;/p&gt;
&lt;p&gt;Actually, what I found was a &lt;a href="ftp://ssd.jpl.nasa.gov/pub"&gt;JPL public FTP&lt;/a&gt;, with lots of data in it (I have barely taken a glance to all the folders that contains, so have fun looking into it :P).&lt;/p&gt;
&lt;p&gt;In that FTP, inside &lt;code&gt;ssd&lt;/code&gt; folder (Solar System Dynamics, not Solid State Drive), there were several different files, some of them with .DB extension, some of them with .dat extension, and a README.&lt;/p&gt;
&lt;p&gt;The README explained some of the files (a few of them are still a mystery), and I quote what it said about a file named &lt;code&gt;dastcom5.zip&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dastcom5.zip&lt;/p&gt;
&lt;p&gt;Link to a a portable/programmable version of the JPL/Horizons 
 database of asteroids and comets ("DASTCOM5"), updated as often …&lt;/p&gt;&lt;/blockquote&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="DASTCOM5"></category><category term="APIs"></category><category term="JPL"></category><category term="mocking"></category></entry><entry><title>NeoWs, SPK-ID and parsing (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017/07/31/2017-07-31-neows-spk-id-and-parsing-socis/" rel="alternate"></link><published>2017-07-31T22:30:00+02:00</published><updated>2017-07-31T22:30:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-31:2017/07/31/2017-07-31-neows-spk-id-and-parsing-socis/</id><summary type="html">&lt;p&gt;In the previous entry, several different APIs related to NEOs were studied, and finally &lt;a href="https://api.nasa.gov/neo/?api_key=DEMO_KEY"&gt;NeoWs&lt;/a&gt; was chosen to start working with.&lt;/p&gt;
&lt;p&gt;This week, we aimed to start with coding itself, adding an &lt;code&gt;orbit_from_spk_id&lt;/code&gt; function to newly created &lt;code&gt;poliastro.neos module&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In order to achieve this, the first step was researching how NeoWs API exactly works.&lt;/p&gt;
&lt;h2&gt;NeoWs operation&lt;/h2&gt;
&lt;p&gt;As stated in the prevoius article of this "series", this API provides several different functionalities, but, for the moment, we were only interested in the lookup service.&lt;/p&gt;
&lt;p&gt;It also counts with web documentation, which was a really good start point, as you can see:&lt;/p&gt;
&lt;p&gt;&lt;img alt="NeoWs Documentation" src="https://blog.poliastro.space/images/neows_lookup.png" title="NeoWs Documentation"&gt;&lt;/p&gt;
&lt;p&gt;When using the lookup service (and any NASA API) you need an &lt;code&gt;API key&lt;/code&gt;, but we used &lt;code&gt;DEMO_KEY&lt;/code&gt;, which only limits your queries to 40 per hour. Having that in mind, all you need to do is a query …&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="NeoWs"></category><category term="APIs"></category><category term="HTML"></category><category term="parsing"></category></entry><entry><title>NeoWs, SPK-ID y parsing (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017-07-31-neows-spk-id-and-parsing-socis-es.html" rel="alternate"></link><published>2017-07-31T22:30:00+02:00</published><updated>2017-07-31T22:30:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-31:2017-07-31-neows-spk-id-and-parsing-socis-es.html</id><summary type="html">&lt;p&gt;En la anterior entrada, estudiamos diferentes APIs relacionadas con NEOs, y finalmente elegimos &lt;a href="https://api.nasa.gov/neo/?api_key=DEMO_KEY"&gt;NeoWs&lt;/a&gt; para empezar a trabajar.&lt;/p&gt;
&lt;p&gt;Esta semana, nuestro objetivo era empezar con la propia programación, añadiendo una función de la forma &lt;code&gt;orbit_from_spk_id&lt;/code&gt; al nuevo módulo &lt;code&gt;poliastro.neos&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para conseguir esto, el primer paso era investigar el funcionamiento exacto de la API NeoWs.&lt;/p&gt;
&lt;h2&gt;Funcionamiento de NeoWs&lt;/h2&gt;
&lt;p&gt;En la anterior entrada de esta "serie", ya dijimos que esta API proporciona varias funcionalidades distintas, pero, por el momento, solo nos interesaba el servicio de búsqueda.&lt;/p&gt;
&lt;p&gt;Además, también proporciona una documentación web, que es un buen sitio para empezar, como se puede ver:&lt;/p&gt;
&lt;p&gt;&lt;img alt="NeoWs Documentation" src="https://blog.poliastro.space/images/neows_lookup.png" title="NeoWs Documentation"&gt;&lt;/p&gt;
&lt;p&gt;Al usar el servicio de búsqueda (y cualquier otra API de la NASA), necesitas una &lt;code&gt;API key&lt;/code&gt;, pero nosotro usamos &lt;code&gt;DEMO_KEY&lt;/code&gt;, que únicamente límita las peticiones a 40 por hora. Con esto en mente, lo único que necesitas …&lt;/p&gt;</summary><category term="SOCIS"></category><category term="poliastro"></category><category term="NASA"></category><category term="NeoWs"></category><category term="APIs"></category><category term="HTML"></category><category term="parsing"></category></entry><entry><title>Space APIs, JSON and REST (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017/07/25/2017-07-25-space-apis-json-and-rest-socis/" rel="alternate"></link><published>2017-07-25T14:00:00+02:00</published><updated>2017-07-25T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-25:2017/07/25/2017-07-25-space-apis-json-and-rest-socis/</id><summary type="html">&lt;p&gt;After setting up the blog, it was time to start with the first week of my &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#timeline"&gt;timeline&lt;/a&gt;. The task for this week was to research the available NASA Open APIs and other NEOs databases that could better fit for this project.&lt;/p&gt;
&lt;p&gt;I had already studied some APIs, and taked a look at their capabilities, but further research was needed. As my &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#proposal"&gt;proposal&lt;/a&gt; was made of 3 different pages, I analyzed each one separately.&lt;/p&gt;
&lt;h2&gt;CNEOS page&lt;/h2&gt;
&lt;p&gt;In the &lt;a href="https://cneos.jpl.nasa.gov/orbits/"&gt;CNEOS page&lt;/a&gt; there is a list of tools, but it can be shorten to four different APIs/Databases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ssd.jpl.nasa.gov/sbdb.cgi"&gt;JPL Small-Body Database Browser&lt;/a&gt;: allows to search any small-body (like NEOs) by entering the IAU number, name, or designation, and also supports wild-cards &lt;code&gt;*&lt;/code&gt; and/or &lt;code&gt;?&lt;/code&gt;. Available data include, quoting the page itself:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;orbital elements&lt;/li&gt;
&lt;li&gt;orbit diagrams&lt;/li&gt;
&lt;li&gt;physical parameters&lt;/li&gt;
&lt;li&gt;discovery circumstances&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Newly discovered objects and their …&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category><category term="NASA"></category><category term="APIs"></category><category term="open data"></category></entry><entry><title>APIs espaciales, JSON y REST (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017-07-25-space-apis-json-and-rest-socis-es.html" rel="alternate"></link><published>2017-07-25T14:00:00+02:00</published><updated>2017-07-25T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-25:2017-07-25-space-apis-json-and-rest-socis-es.html</id><summary type="html">&lt;p&gt;Después de montar el blog, era el momento de empezar con la primera semana de mi &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#timeline"&gt;timeline&lt;/a&gt;. La tarea de esta semana era investigar las APIs de la NASA disponibles y otras bases de datos de NEOs que pudiesen ser útiles para este proyecto.&lt;/p&gt;
&lt;p&gt;Ya había estudiado algunas APIs y echado un vistazo a sus posibilidades, pero hacía falta una investigación más profunda. Como mi &lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo#proposal"&gt;propuesta&lt;/a&gt; se componía de 3 páginas diferentes, decidí analizar cada una por separado.&lt;/p&gt;
&lt;h2&gt;CNEOS&lt;/h2&gt;
&lt;p&gt;En la página del &lt;a href="https://cneos.jpl.nasa.gov/orbits/"&gt;CNEOS&lt;/a&gt; hay una lista de distintas herramientas, pero puede ser acortada a las siguientes APIs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ssd.jpl.nasa.gov/sbdb.cgi"&gt;JPL Small-Body Database Browser&lt;/a&gt;: permite buscar cualquier cuerpo menor (como los NEOs) mediante su número IAU, nombre o designación, y también soporta los caracteres comodín &lt;code&gt;*&lt;/code&gt; y/o &lt;code&gt;?&lt;/code&gt;. Los datos disponibles incluyen, citando a la propia página:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;elementos orbitales&lt;/li&gt;
&lt;li&gt;diagramas orbitales&lt;/li&gt;
&lt;li&gt;parámetros físicos …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category><category term="NASA"></category><category term="APIs"></category><category term="open data"></category></entry><entry><title>Pelican, Github Pages and auto-deployment (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017/07/15/2017-07-15-pelican-github-pages-and-auto-deployment-socis/" rel="alternate"></link><published>2017-07-15T14:00:00+02:00</published><updated>2017-07-15T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-15:2017/07/15/2017-07-15-pelican-github-pages-and-auto-deployment-socis/</id><summary type="html">&lt;p&gt;After several weeks thinking that &lt;a href="http://sophia.estec.esa.int/socis/"&gt;SOCIS&lt;/a&gt; would not launch this year, finally the long-awaited email arrived! I am really happy for being selected by &lt;code&gt;poliastro&lt;/code&gt; and my mentor &lt;code&gt;@astrojuanlu&lt;/code&gt;, with the aim of creating an API, relying on NASA Open APIs, in order to provide small-bodies orbital data (&lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo"&gt;my proposal can be seen here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Our plan is to write a weekly blog entry, stating and documenting what have been done during that period. I think these posts will be a great way of reviewing what have been accomplished, and I also hope they will be interesting enough to anyone interested in Python, science, &lt;a href="https://en.wikipedia.org/wiki/Near-Earth_object"&gt;NEOs&lt;/a&gt;, or just reading random internet blogs.&lt;/p&gt;
&lt;p&gt;This has been the first one of eight weeks (yeah, that’s not what my proposal timeline says, but it’s all we have 😊), and, surprisingly, the first task I …&lt;/p&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category></entry><entry><title>Pelican, Github Pages y despliegue automático (SOCIS 2017)</title><link href="https://blog.poliastro.space/2017-07-15-pelican-github-pages-and-auto-deployment-socis-es.html" rel="alternate"></link><published>2017-07-15T14:00:00+02:00</published><updated>2017-07-15T14:00:00+02:00</updated><author><name>Antonio Hidalgo Galindo</name></author><id>tag:blog.poliastro.space,2017-07-15:2017-07-15-pelican-github-pages-and-auto-deployment-socis-es.html</id><summary type="html">&lt;p&gt;Tras varias semanas creyendo que &lt;a href="http://sophia.estec.esa.int/socis/"&gt;SOCIS&lt;/a&gt; no se realizaría este año, ¡por fin me ha llegado el email!  Estoy muy contento de haber sido elegido por &lt;code&gt;poliastro&lt;/code&gt; y mi mentor &lt;code&gt;@astrojuanlu&lt;/code&gt;, con el objetivo de crear una API, basada en las APIs abiertas de la NASA, para proporcionar datos orbitales de cuerpos menores (&lt;a href="https://github.com/poliastro/poliastro/wiki/SOCIS-2017-Antonio-Hidalgo"&gt;mi propuesta completa está aquí&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Nuestra idea es escribir una entrada semanal en este blog, documentado el trabajo realizado durante esa semana. Creo que cada post será una buena manera de revisar lo que se va consiguiendo, y además espero que resulte interesante para cualquier interesado en Python, ciencia, &lt;a href="https://es.wikipedia.org/wiki/Objeto_pr%C3%B3ximo_a_la_Tierra"&gt;NEOs&lt;/a&gt;, o simplemente en leer blogs aleatorios por internet.&lt;/p&gt;
&lt;p&gt;Esta ha sido la primera de ocho semanas (sí, sé que en mi propuesta pone otra cosa, pero es el tiempo que tenemos 😊), y, sorprendentemente, la primera tarea que …&lt;/p&gt;</summary><category term="SOCIS"></category><category term="ESA"></category><category term="poliastro"></category></entry></feed>